var p=Object.defineProperty;var h=(o,r,t)=>r in o?p(o,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[r]=t;var d=(o,r,t)=>(h(o,typeof r!="symbol"?r+"":r,t),t);import{U as s,j as c,V as n,G as E,W as D}from"./index-609fd921.js";var a=(o=>(o[o.SUCCESS=200]="SUCCESS",o[o.ERROR=500]="ERROR",o[o.OVERDUE=401]="OVERDUE",o[o.UNSAFETY=402]="UNSAFETY",o[o.FORBIDDEN=403]="FORBIDDEN",o[o.EXPIRED=405]="EXPIRED",o[o.ERRAUTH=406]="ERRAUTH",o[o.ERRGLOBALLOADDING=407]="ERRGLOBALLOADDING",o[o.TIMEOUT=2e4]="TIMEOUT",o.TYPE="success",o))(a||{});const O=(o,r)=>{switch(o){case 400:s(r||c.global.t("commons.res.paramError"));break;case 404:s(r||c.global.t("commons.res.notFound"));break;case 403:n.replace({path:"/login"}),s(r||c.global.t("commons.res.forbidden"));break;case 500:s(r||c.global.t("commons.res.serverError"));break;default:s(r||c.global.t("commons.res.commonError"))}},i=E(),f={baseURL:"/api/v1",timeout:a.TIMEOUT,withCredentials:!0};class T{constructor(r){d(this,"service");this.service=D.create(r),this.service.interceptors.request.use(t=>(t.method!="get"&&(t.headers={"X-CSRF-TOKEN":i.csrfToken,...t.headers}),{...t}),t=>Promise.reject(t)),this.service.interceptors.response.use(t=>{const{data:e}=t;if(t.headers["x-csrf-token"]&&i.setCsrfToken(t.headers["x-csrf-token"]),e.code==a.OVERDUE||e.code==a.FORBIDDEN)return n.replace({path:"/login"}),Promise.reject(e);if(e.code==a.UNSAFETY)return n.replace({path:"/login"}),e;if(e.code==a.EXPIRED)return n.push({name:"Expired"}),e;if(e.code==a.ERRGLOBALLOADDING){i.setGlobalLoading(!0),i.setLoadingText(e.message);return}else i.isLoading&&i.setGlobalLoading(!1);return e.code==a.ERRAUTH?e:e.code&&e.code!==a.SUCCESS?(s(e.message),Promise.reject(e)):e},async t=>{const{response:e}=t;return t.message.indexOf("timeout")!==-1&&s("\u8BF7\u6C42\u8D85\u65F6\uFF01\u8BF7\u60A8\u7A0D\u540E\u91CD\u8BD5"),e&&O(e.status,e.data&&e.data.message?e.data.message:""),window.navigator.onLine||n.replace({path:"/500"}),Promise.reject(t)})}get(r,t,e={}){return this.service.get(r,{params:t,...e})}post(r,t,e){return this.service.post(r,t,{baseURL:"/api/v1",timeout:e||a.TIMEOUT,withCredentials:!0})}put(r,t,e={}){return this.service.put(r,t,e)}delete(r,t,e={}){return this.service.delete(r,{params:t,...e})}download(r,t,e={}){return this.service.post(r,t,e)}upload(r,t={},e){return this.service.post(r,t,e)}}var b=new T(f);export{b as h};
